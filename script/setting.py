# setting.py
import pygame as pg
WIDTH=1200
HEIGHT=800
FPS=30

TITLE="YIHUN"
BLACK=(0,0,0)
BLUE=(0,155,255)
WHITE=(255,255,255)

# 定义地图上的位置
positions_level1 = [
    (365, 255),
    (460, 310),
    (550, 365),
    (460, 420),
    (550, 475),
    (640, 530),
    (740, 585),
    (825, 630)
]

# 第二关的地图上的位置
positions_level2 = [
    (487, 440),  # 示例起始点
    (572, 490),
    (657, 540),
    (742, 590), 
    (835, 640), 
    (920, 690),
    # 第二个弯(可)
    (835, 740), 
    (742, 790), 
    (657, 840), 
    (572, 890), 
    (487, 940), 
    (402, 990), 
    # 第三个弯
    (487, 1040), 
    (572, 1090), 
    (657, 1140), 
    (742, 1190),
    # 第四个弯
    (657, 1240), 
    (572, 1290), 
    (487, 1340), 
    (402, 1390),
    # 第五个弯
    (487, 1440), 
    (572, 1490), 
    (657, 1540), 
    # 第六个弯(以上可)
    (572, 1590), 
    (487, 1640), 
    (402-5, 1690), 
    (317-10, 1740),
    (317-95, 1790),
    # 第七个弯(以上可)
    (317-5, 1840), 
    (402-5, 1890), 
    (487-5, 1940),
    (572-5, 1990), 
    (657, 2040), 
    (742, 2090), 
    (827, 2140),
    (912, 2190), 
    (997, 2240), 
    # 第八个弯(以上可)
    (1082, 2190), 
    (1177, 2140),
    (1262, 2090), 
    (1347, 2040), 
    (1432, 1990), 
    (1517, 1940),
    (1602, 1890),
    (1687+5, 1840),
    (1772+5, 1790),
    # 第九个弯
    (1857+10, 1840), 
    (1942+10, 1890), 
    (2027+10, 1940), 
    # 第十个弯（以上可以）
    (1942+10, 1990),
    (1857+10, 2040), 
    (1772+10, 2090), 
    # 第十一个弯
    (1857+10, 2140), 
    (1942+10, 2190),
    (2027+10, 2240),
    # 第十二个弯
    (2027+85+10, 2190+5), 
    (2027+85*2+12, 2140+5), 
    (2027+85*3+14, 2090+5), 
    (2027+85*4+16, 2040+5),
    (2027+85*5+18, 1990+5), 
    (2027+85*6+25, 1940+5),
    # 第十三个弯
    (2027+85*5+20, 1890), 
    (2027+85*4+20, 1840), 
    (2027+85*3+20, 1790), 
    (2027+85*2+20, 1740),
    (2027+85*1+20, 1690), 
    (2027+85*0+20, 1640),
    (2027-85*1+17, 1590), 
    (2027-85*2+14, 1540),
    (2027-85*3+10, 1490),
    # 第十四个弯（可
    (2027-85*2+10, 1440+5), 
    (2027-85*1+10, 1390+5), 
    (2027+85*0+10, 1340+5), 
    (2027+85*1+10, 1290+5),
    (2027+85*2+12, 1240+5),
    # 第十五个弯
    (2027+85*3+20, 1290+5), 
    (2027+85*4+15, 1340+5), 
    # 第十六个弯
    (2027+85*5+15, 1290+5), 
    (2027+85*6+15, 1240+5),
    (2027+85*7+20, 1190+5),
    (2027+85*8+20, 1140+5),
    # 第十七个弯
    (2027+85*7+25, 1090+5), 
    (2027+85*6+25, 1040+5),
    (2027+85*5+25, 990+5),
    (2027+85*4+25, 940+5),
    (2027+85*3+25, 890+5), 
    (2027+85*2+25, 840+5),
    (2027+85*1+20, 790+5),
    # 第十八个弯
    (2027+85*2+20, 740+5),
    (2027+85*3+25, 690+5), 
    # 第十九个弯
    (2027+85*2+25, 640+5),
    (2027+85*1+20, 590+5),
    (2027+85*0+20, 540+5),
    (2027-85*1+15, 490+5), 
    (2027-85*2+15, 440+5)
]
shop_actions = {
                (190, 630, 260, 60): ('tool_a', 1, 6),  # 按钮坐标，增加的工具属性，碎片成本
                (470, 630, 260, 60): ('tool_b', 1, 4),
                (750, 630, 260, 60): ('tool_c', 1, 8),
                }

eventa_positions= {
    (1,4),
    (2,3),
    (2,14),
    (2,32),
    (2,42),
    (2,55),
    (2,60),
    (2,67),
    (2,77)
}
eventb_positions= {
    (1,1),
    (2,2),
    (2,7),
    (2,27),
    (2,40),
    (2,45),
    (2,52),
    (2,58),
    (2,70),
    (2,79),
    (2,83)
}
store_positions = {
    (1, 6), 
    (2, 21),  
    (2, 36), 
    (2, 63),  
    (2, 72),
    (2, 79)
}
event_A_images= {
    (1,4):'A1.png',
    (2,3):'A2.png',
    (2,14):'A3.png',
    (2,32):'A4.png',
    (2,42):'A5.png',
    (2,55):'A6.png',
    (2,60):'A7.png',
    (2,67):'A8.png',
    (2,77):'A9.png'
}
event_B_images = {
    (1, 1): 'B1.png',  # 第一关位置1对应B1.png
    (2, 2): 'B2.png',  # 第二关位置3对应B2.png
    (2, 7): 'B3.png',  # 第二关位置7对应B3.png
    (2,27): 'B4.png', 
    (2,40): 'B5.png',
    (2,45): 'B6.png',
    (2,52): 'B7.png',
    (2,58): 'B8.png',
    (2,70): 'B9.png',
    (2,79): 'B10.png',
    (2,83): 'B11.png'
}
# 定义事件 A 点的道具类型索引
event_A_tool_types = [
    'tool_a', 'tool_a', 'tool_a',  # 前三个事件 A 点给予道具 A
    'tool_b', 'tool_b', 'tool_b',  # 接下来三个事件 A 点给予道具 B
    'tool_c', 'tool_c',          # 最后两个事件 A 点给予道具 C
]
event_B_rewards = {
    (1, 1): 8,  
    (2, 2): 8,  
    (2, 7): 4,  
    (2,27): 8, 
    (2,40): 4,
    (2,45): 4,
    (2,52): 8,
    (2,58): 4,
    (2,70): 8,
    (2,79): 4,
    (2,83): 4
}





